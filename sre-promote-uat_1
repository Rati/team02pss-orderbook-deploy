pipeline {
  agent {
    kubernetes {
        yaml """\
    apiVersion: v1
    kind: Pod
    metadata:
      labels:
        builder: promotion
    spec:
      serviceAccountName: jenkins-agent
      containers:
      - name: awscli
        image: amazon/aws-cli
        command:
        - cat
        tty: true
    """.stripIndent()
    }
  }
  stages {

    stage('Function Test before promote'){
      steps{
        script {
              sh """
               curl https://c386team02dev.computerlab.online/
                curl https://c386team02dev-api.computerlab.online/
               """
        }
      }
    }

    stage('Promote to Uat') {
      steps {
          container(name: 'awscli') {
            script {
              buildNumber = Jenkins.instance.getItem(projectName).lastSuccessfulBuild.number
            }
            sh '''
            export AWS_DEFAULT_REGION=us-east-1
            imgNum=''' + buildNumber + '''
            APIMANIFEST=$(aws ecr batch-get-image --repository-name production-support-course --image-ids imageTag=${imageAPIDevName}${imgNum} --query 'images[].imageManifest' --output text)
            DBMANIFEST=$(aws ecr batch-get-image --repository-name production-support-course --image-ids imageTag=${imageDBDevName}${imgNum} --query 'images[].imageManifest' --output text)
            FEMANIFEST=$(aws ecr batch-get-image --repository-name production-support-course --image-ids imageTag=${imageFEDevName}${imgNum} --query 'images[].imageManifest' --output text)
            #SSHMANIFEST=$(aws ecr batch-get-image --repository-name production-support-course --image-ids imageTag=${imageSSHDevName}${imgNum} --query 'images[].imageManifest' --output text)
            # Check API
            if [ $(aws ecr describe-images --repository-name production-support-course | grep "${imageAPIUatName}${imgNum}" | wc -l) -eq 0 ]
            then
              # We don't have Uat so tag Dev to Uat
              if ! aws ecr put-image --repository-name production-support-course --image-tag ${imageAPIUatName}${imgNum} --image-manifest "$APIMANIFEST"
              then
                exitvalue=1
              fi
            fi
            # Check DB
            if [ $(aws ecr describe-images --repository-name production-support-course | grep "${imageDBUatName}${imgNum}" | wc -l) -eq 0 ]
            then
              # We don't have uat so tag Dev to uat
              if ! aws ecr put-image --repository-name production-support-course --image-tag ${imageDBUatName}${imgNum} --image-manifest "$DBMANIFEST"
              then
                exitvalue="${exitvalue}2"
              fi
            fi
            
            # Check Front End
            if [ $(aws ecr describe-images --repository-name production-support-course | grep "${imageFEUatName}${imgNum}" | wc -l) -eq 0 ]
            then
              # We don't have uat so tag Dev to uat
              if ! aws ecr put-image --repository-name production-support-course --image-tag ${imageFEUatName}${imgNum} --image-manifest "$FEMANIFEST"
              then
                exitvalue=3
              fi
            fi

            # Check SSH
            #if [ $(aws ecr describe-images --repository-name production-support-course | grep "${imageSSHUatName}${imgNum}" | wc -l) -eq 0 ]
            #then
              # We don't have uat so tag Dev to uat
              #if ! aws ecr put-image --repository-name production-support-course --image-tag ${imageSSHUatName}${imgNum} --image-manifest "$SSHMANIFEST"
              #then
                #exitvalue=3
              #fi
            #fi

          case ${exitvalue} in
            0) echo "Update OK"
               ;;
            1) echo "API failed to push to repository"
               ;;
            2) echo "DB failed to push to repository"
               ;;
            3) echo "AC failed to push to repository"
               ;;
            12) echo "API and DB failed to push to repository"
               ;;
            13) echo "API and AC failed to push to repository"
               ;;
            23) echo "DB and AC failed to push to repository"
               ;;
            123) echo "All images failed to push to repository"
               ;;
          esac

          exit ${exitvalue}
'''
        }
      }
    }
  }
  environment {
    ECR_REPO = '108174090253.dkr.ecr.us-east-1.amazonaws.com/production-support-course'

    imageAPIDevName='c386team02api-dev-'
    imageAPIUatName='c386team02api-uat-'
    imageDBDevName='c386team02db-dev-'
    imageDBUatName='c386team02db-uat-'
    imageFEDevName='c386team02fe-dev-'
    imageFEUatName='c386team02fe-uat-'
    //imageSSHDevName='c386team02ssh-dev-'
    //imageSSHUatName='c386team02ssh-uat-'
    projectName='c386team02'

  }
}
